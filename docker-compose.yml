version: "3.8"

services:
  # Identity Reconciliation API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: identity-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      LOG_LEVEL: info
      DATABASE_URL: "file:./data/prod.db"
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379"
      REDIS_KEY_PREFIX: "identity-api:"
      CORS_ORIGIN: "*"
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
      CACHE_DEFAULT_TTL: 300000
      CACHE_MAX_SIZE: 1000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - identity-network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/api/v1/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: identity-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    networks:
      - identity-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: identity-redis-ui
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: "local:redis:6379"
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - identity-network
    profiles:
      - tools

  # Nginx Load Balancer (for multiple API instances)
  nginx:
    image: nginx:alpine
    container_name: identity-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - identity-network
    profiles:
      - production

volumes:
  redis-data:
    driver: local

networks:
  identity-network:
    driver: bridge
